package com.stackroute.movieservice.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.stackroute.movieservice.domain.Movie;
import com.stackroute.movieservice.services.MovieService;

@RestController
@RequestMapping("/api/v1/")
public class MovieController {
	private MovieService movieService;

	@Autowired
	public MovieController(MovieService movieService) {
		this.movieService = movieService;
	}

	@RequestMapping(value = "/movie", method = RequestMethod.POST)
	public ResponseEntity<Movie> saveMovie(@RequestBody Movie movie) {
		Movie movieObj = movieService.saveMovie(movie);
		return new ResponseEntity<Movie>(movieObj, HttpStatus.OK);
	}

	@RequestMapping(value = "/movies", method = RequestMethod.GET)
	public ResponseEntity<?> getAllMovies() {

		List<Movie> movieList = movieService.getAllMovies();

		return new ResponseEntity<List<Movie>>(movieList, HttpStatus.OK);
	}
	
	@RequestMapping(value = "/movie", method = RequestMethod.PUT)
	public ResponseEntity<Movie> updateMovie(@RequestBody Movie movieId) {
		Movie movieObj = movieService.updateMovie(movieId);
		return new ResponseEntity<Movie>(movieObj, HttpStatus.OK);
	}
	
	@RequestMapping(value = "/movie/{movieId}", method = RequestMethod.DELETE)
	public ResponseEntity<?> deleteMovie(@PathVariable int movieId) {
		 Movie movie=movieService.deleteMovie(movieId);
		return new ResponseEntity<Movie>(movie, HttpStatus.OK);
	}
	

	@RequestMapping(value = "/movie/{movieId}", method = RequestMethod.GET)
	public ResponseEntity<?> getById(@PathVariable int movieId) {
		return new ResponseEntity<Movie>(movieService.getById(movieId), HttpStatus.FOUND);

	}
	
	@RequestMapping(value = "/movie/{movieTitle}", method = RequestMethod.GET)
	public ResponseEntity<?> getByTitle(@PathVariable String movieTitle) {
		return new ResponseEntity<Movie>(movieService.getByTitle(movieTitle), HttpStatus.FOUND);

	}
	

}
