package com.stackroute.userprofile.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.stackroute.userprofile.domain.UserProfile;
import com.stackroute.userprofile.exceptions.EmailAlreadyExistsException;
import com.stackroute.userprofile.service.UserProfileServices;

@RestController
@RequestMapping("/api/v1/")
public class UserProfileController {
	
	private UserProfileServices userProfileServicesImpl;
	
	@Autowired
	public UserProfileController(UserProfileServices userProfileServicesImpl) {
		this.userProfileServicesImpl=userProfileServicesImpl;
	}

	
	@RequestMapping(value="save" , method=RequestMethod.POST , produces="application/json")
	public ResponseEntity<?> saveMovie(@RequestBody UserProfile user){
		String userEmail=user.getUserEmail();
		try {
			if(userProfileServicesImpl.saveUser(user)) {
				return new ResponseEntity<String>("user added",HttpStatus.OK);
			}
			else {
				throw new EmailAlreadyExistsException("User aleready exists with this email!");
			}
		}
		catch (EmailAlreadyExistsException e) {
			return new ResponseEntity<String>("user exists",HttpStatus.OK);
		}
					
	}	
	
	try {
		Movie savedMovie;
		if((savedMovie = movieServiceImpl.saveMovie(movie))!=null) {
			return new ResponseEntity<Movie>(savedMovie,HttpStatus.OK);
		}
		else {
			throw new MovieAlreadyExistsException(movie);
		}
	}
	catch(MovieAlreadyExistsException e) {
		return new ResponseEntity<String>(e.toString(),HttpStatus.OK);
	}
	
	
}